#include<iostream>
#include<vector>
#include<cmath>
using namespace std;
vector<int> sieveEratothen(int limit){
    if (limit<2) return {};
    // Отметить число составное или нет
    // mared[x]==true - значит число составное - не простое
    vector<bool> marked(limit + 1,false);
    int upper =static_cast<int>(sqrt(limit));// Каст - это приведение одного типа к другомуv
    for(int p=2;p<=upper;++p){
        if (!marked[p]){
            // p*p p*p+1 p*p+2p...
            for(int multipul=p*p;multipul<=limit;multipul+=p){
                marked[multipul]=true;
                
            }
        }
    }
    vector <int> primes;
    for (int i = 2;i<=limit;++i){
        if (!marked[i]) primes.push_back(i);
    }
    return primes;
}

int main(){
    int limit;
    if (!(cin >> limit)){
        return 1;
    }
    vector<int> primes=sieveEratothen(limit);
    for(int elem: primes) cout << elem << ' ';
    
    return 0;
}
Написать программу для факторизации заданного с клавиатуры числа методом простого перебора (указать простые множители и их кратность). Для анализа числа на простоту использовать решето Эратосфена

